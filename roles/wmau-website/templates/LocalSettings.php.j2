<?php
# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}


$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

# If PHP's memory limit is very low, some operations may fail.
# ini_set( 'memory_limit', '20M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

if(!isset($_SERVER["WIKI"])) {
	die("Multi-site environment, set WIKI environment variable first.\n");
}
$wiki = $_SERVER["WIKI"];
if (!file_exists("$IP/LocalSettings-$wiki.php")) {
	die("Wiki not installed on this site: $wiki\n");
}

# Load in all available skins
{% for skin in skins %}
wfLoadSkin( '{{ skin }}' );
{% endfor %}

# Configure cache
$wgCacheEpoch = 20160130232602;
$wgInvalidateCacheOnLocalSettingsChange = true;

# Trust X-Forwarded-For header from nginx
$wgUsePrivateIPs = true;
$wgSquidServersNoPurge = array( '127.0.0.1' );

# Load site-specific config options
require_once("$IP/LocalSettings-$wiki.php");
{% if mw_debug  %}
# Debug mode is enabled
$wgDebugLogFile = "/var/log/mediawiki/debug-$wiki.log";
{% endif %}
